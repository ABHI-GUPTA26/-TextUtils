{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","togglemode","role","htmlFor","TextForm","text","setText","useState","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","handleOnClick1","newText","toUpperCase","showalert","handleOnClick2","toLowerCase","handleOnClear","split","length","defaultProps","abouttext","Alert","alert","message","App","setmode","setAlert","setTimeout","document","body","setInterval","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d9f44e58.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/*<li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">{props.abouttext}</a>\r\n  </li>*/}\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode==='light'? 'EnableDarkMode':'EnableLightMode'}</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  abouttext: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'set title',\r\n  abouttext: 'set text'\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState('enter text');\r\n\r\n  const handleOnClick1 = () => {\r\n    let newText = text.toUpperCase();\r\n    console.log(\"Upper case is clicked\" + newText);\r\n    setText(newText);\r\n    props.showalert(\"UpperCase is enable Now\",\"success\")\r\n  }\r\n\r\n  const handleOnClick2 = () => {\r\n    let newText = text.toLowerCase();\r\n    console.log(\"Lower case is clicked\" + newText);\r\n    setText(newText);\r\n    props.showalert(\"LowerCase is enable Now\",\"success\")\r\n  }\r\n\r\n  const handleOnClear = () => {\r\n    let newText = (\"\");\r\n    console.log(\"Lower case is clicked\" + newText);\r\n    setText(newText);\r\n    props.showalert(\" All message is clear Now\",\"success\")\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    console.log(\"on change\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\"style ={{color:props.mode==='light'?'black':'white'}}>\r\n        <h1 className= \"my-2\">{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea className=\"form-control\" value={text} onChange={handleOnChange} style ={{backgroundColor:props.mode==='light'?'white':'grey' ,color:props.mode==='light'?'black':'white'}} id=\"mybox\" rows=\"8\"></textarea>\r\n        </div>\r\n\r\n        <button className=\"btn btn-primary mx-2 my-8\" onClick={handleOnClick1}>Convert To Upper Case</button>\r\n        <button className=\"btn btn-primary mx-2 my-8\" onClick={handleOnClick2}>Convert To Lower Case</button>\r\n        <button className=\"btn btn-primary mx-2 my-8\" onClick={handleOnClear}>Clear Text</button>\r\n      </div>\r\n\r\n      <div className=\"container my-3\"style ={{color:props.mode==='light'?'black':'white'}}>\r\n        <h1>Text Summary-</h1>\r\n        <p>{text.split(\" \").length} words and {text.length} Characters</p>\r\n        <p>{0.008 * text.split(\"\").length} Minutes to read</p>\r\n        <h2> Preview</h2>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\nfunction Alert(props) {\r\n    \r\n  return (\r\n    \r\n    <div>\r\n     \r\n      <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{props.alert.type}</strong>:{props.alert.message}\r\n           \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from \"react\";\nimport { useState} from \"react\";\n//import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n\n//import {BrowserRouter as Router,Route,Routes,Link} from 'react-router-dom';\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState('null');\nconst showalert=(message ,type)=>{\n{\n  setAlert({message,type})\n  setTimeout(()=>{\n    setAlert('null');\n  },1500)\n\n}\n}\n\n\n  const togglemode=()=>{\n    if(mode==='light'){\n      setmode('dark');\n       showalert(\"Dark mode is enable Now\",\"success\")\n      document.body.style.backgroundColor='#042743';\n      document.title='TextUtils-Dark Mode';\n      setInterval(() => {\n        document.title='TextUtils is amazing!';\n      }, 2000);\n      setInterval(() => {\n        document.title='Install TextUtils Now';\n      }, 1500);\n    }\n    else{\n      setmode('light');\n      showalert(\"Light mode is enable Now\",\"success\")\n      document.body.style.backgroundColor='white';\n      document.title='TextUtils-Light Mode';\n    }\n  }\n  return (\n    <>\n   { /*<Router>*/}\n      <Navbar title=\"TextUtils\" abouttext=\"About\" mode={mode} togglemode={togglemode}/>\n  <div className=\"container my-3\">\n  <Alert alert={alert}/>\n  {/*<Routes>\n         // <Route exact path=\"/about\"element={<About/>}/>*/}\n            \n             \n         {/* <Route  exact path=\"/\" element={ <TextForm heading=\"Enter Your Text Here\" mode={mode} alert={alert} showalert={showalert}/> }/>*/}\n          <TextForm heading=\"Enter Your Text Here\" mode={mode} alert={alert} showalert={showalert}/>\n            \n   {/*</Routes>*/}\n     \n  \n  \n\n  </div>\n  {/*</Router>*/}  \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}